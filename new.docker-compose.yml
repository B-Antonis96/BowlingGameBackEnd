services:

  #############
  # DATABASES #
  #############
  user-db:
    image: "mysql:latest"
    ports:
      - "3307:3306" # DEVELOPMENT/ DBA ONLY
    environment:
      MYSQL_ROOT_USER: ${USER_DB_USERNAME}
      MYSQL_ROOT_PASSWORD: ${USER_DB_PASSWORD}
      MYSQL_DATABASE: ${USER_DB_NAME}
    volumes:
      - "user-db-data:/var/lib/mysql"
    networks:
      - "bowling-network"

  game-db:
    image: "mysql:latest"
    ports:
      - "3306:3306" # DEVELOPMENT/ DBA ONLY
    environment:
      MYSQL_ROOT_USER: ${GAME_DB_USERNAME}
      MYSQL_ROOT_PASSWORD: ${GAME_DB_PASSWORD}
      MYSQL_DATABASE: ${GAME_DB_NAME}
    volumes:
      - "game-db-data:/var/lib/mysql"
    networks:
      - "bowling-network"

  notification-db:
    image: "mongo:latest"
    ports:
      - "27017:27017" # DEVELOPMENT/ DBA ONLY
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${NOTIFICATION_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${NOTIFICATION_DB_PASSWORD}
    volumes:
      - "mongo-data:/data/db"
    networks:
      - "bowling-network"


  ############
  # SERVICES #
  ############
  user-service:
    image: "your-dockerhub-username/user-service:latest"
    ports:
      - "8081:8080" # DEVELOPMENT ONLY
    depends_on:
      - "user-db"
    environment:
      MYSQL_DB_HOST: ${USER_DB_HOST}
      MYSQL_DB_PORT: "3306"
      MYSQL_DB_NAME: ${USER_DB_NAME}
      MYSQL_DB_USERNAME: ${USER_DB_USERNAME}
      MYSQL_DB_PASSWORD: ${USER_DB_PASSWORD}
    networks:
      - "bowling-network"

  game-service:
    image: "your-dockerhub-username/game-service:latest"
    ports:
      - "8082:8080" # DEVELOPMENT ONLY
    depends_on:
      - "game-db"
    environment:
      MYSQL_DB_HOST: ${GAME_DB_HOST}
      MYSQL_DB_PORT: "3306"
      MYSQL_DB_NAME: ${GAME_DB_NAME}
      MYSQL_DB_USERNAME: ${GAME_DB_USERNAME}
      MYSQL_DB_PASSWORD: ${GAME_DB_PASSWORD}
    networks:
      - "bowling-network"

  notification-service:
    image: "your-dockerhub-username/notification-service:latest"
    ports:
      - "8083:8080" # DEVELOPMENT ONLY
    depends_on:
      - "notification-db"
    environment:
      MONGODB_HOST: ${NOTIFICATION_DB_HOST}
      MONGODB_PORT: "27017"
      MONGODB_DOCUMENT_NAME: ${NOTIFICATION_DB_NAME}
      MONGODB_USERNAME: ${NOTIFICATION_DB_USERNAME}
      MONGODB_PASSWORD: ${NOTIFICATION_DB_PASSWORD}
    networks:
      - "bowling-network"


  ###########
  # GATEWAY #
  ###########
  api-gateway:
    image: "your-dockerhub-username/api-gateway:latest"
    ports:
      - "8080:8080"
    depends_on:
      - "keycloak"
      - "user-service"
      - "game-service"
      - "notification-service"
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
      OAUTH2_CLIENT_ID: "gateway-client"
      OAUTH2_CLIENT_SECRET: changeit
      OAUTH2_PROVIDER_URL: http://keycloak:8180/realms/bowlingrealm
      USER_SERVICE_URI: ${USER_SERVICE_URI}
      GAME_SERVICE_URI: ${GAME_SERVICE_URI}
      NOTIFICATION_SERVICE_URI: ${NOTIFICATION_SERVICE_URI}
    networks:
      - "bowling-network"


  ############
  # EXTERNAL #
  ############
  keycloak:
    image: "quay.io/keycloak/keycloak:22.0.1"
    environment:
      KEYCLOAK_ADMIN: "admin"
      KEYCLOAK_ADMIN_PASSWORD: "admin"
      KC_DB: dev-mem
      KC_HOSTNAME: localhost
      KC_HTTP_PORT: 8180
    ports:
      - "8180:8180"
    command: start-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8180"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./.init/keycloak-setup.sh:/opt/keycloak/keycloak-setup.sh
    entrypoint: ["sh", "/opt/keycloak/keycloak-setup.sh"]


###########
# VOLUMES #
###########
volumes:
  user-db-data:
  game-db-data:
  mongo-data:


############
# NETWORKS #
############
networks:
  bowling-network:
    driver: "bridge"
