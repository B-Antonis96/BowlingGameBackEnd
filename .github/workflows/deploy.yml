name: CI/CD Pipeline
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Build and push each service individually
      - name: Build and push user-service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/user-service:${{ env.IMAGE_TAG }} -f user-service/Dockerfile ./user-service
          docker push ${{ secrets.DOCKER_USERNAME }}/user-service:${{ env.IMAGE_TAG }}

      - name: Build and push game-service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/game-service:${{ env.IMAGE_TAG }} -f game-service/Dockerfile ./game-service
          docker push ${{ secrets.DOCKER_USERNAME }}/game-service:${{ env.IMAGE_TAG }}

      - name: Build and push notification-service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/notification-service:${{ env.IMAGE_TAG }} -f notification-service/Dockerfile ./notification-service
          docker push ${{ secrets.DOCKER_USERNAME }}/notification-service:${{ env.IMAGE_TAG }}

      - name: Build and push api-gateway
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:${{ env.IMAGE_TAG }} -f api-gateway/Dockerfile ./api-gateway
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:${{ env.IMAGE_TAG }}
